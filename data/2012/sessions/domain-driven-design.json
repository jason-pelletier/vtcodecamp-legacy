{
  "slug": "domain-driven-design",
  "title": "Domain-Driven Design",
  "description": "Domain-driven design is a collaborative process involving both domain experts and software practitioners that attempts to address issues of complexity in software. This process is described in the book Domain-Driven Design written by Eric Evans. Domain-driven design starts with the assertion that complexity is in the domain, not in the technology. Accordingly, we must let technology play a supporting role.\n\nA person practicing domain-driven design does not attempt to model reality. Instead, domain experts and software practitioners use a mental model as a tool for solving problems within a given domain. The domain experts and software practitioners collaborate to explore and develop this model. We will look at the concept of a bounded context within which models can be isolated and explored. We will talk about domain-driven design's building block patterns including entities, value objects, aggregates, repositories, services, and domain events. We will see how test-driven development can be used as a means of exploring the model.",
  "_links": {
    "self": { "href": "/2012/sessions/domain-driven-design" },
    "event": { "href": "/2012/" },
    "track": { "href": "/2012/tracks/architecture" },
    "space": { "href": "/2012/spaces/room-3" },
    "category": [
      { "href": "/2012/categories/business" }
    ],
    "timePeriod": { "href": "/2012/time-periods/1615" },
    "level": { "href": "/2012/levels/400" },
    "speaker": [
      { "href": "/2012/speakers/bradley-holt" }
    ]
  }
}
